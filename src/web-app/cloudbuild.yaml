steps:
### [BUILD APP] ###
  - name: 'python:3.9.2'
    id: install-dependencies
    entrypoint: pip
    dir: 'src/web-app'
    args: ["install", "-r", "requirements.txt", "--user"]

  - name: 'gcr.io/$PROJECT_ID/pylint:2.11.1'
    id: lint-code
    entrypoint: 'pylint'
    dir: 'src/web-app'
    args: ['app.py', 'main_test.py', 'wsgi.py']

  - name: 'python:3.9.2'
    id: unit-test-application
    entrypoint: 'bash'
    dir: 'src/web-app'
    args: ['-c', 'python -m pytest']

### [BUILD CONTAINER] ###
  - name: 'gcr.io/cloud-builders/docker'
    id: build-app-container-image
    entrypoint: /bin/bash
    dir: 'src/web-app'
    args: ['-c', 'docker build -t gcr.io/${PROJECT_ID}/web-app:${_APP_VERSION} --build-arg DB_PASSWORD=$${WEB_APP_DB_PASSWORD} .']
    secretEnv: ['WEB_APP_DB_PASSWORD']

  - name: 'gcr.io/cloud-builders/docker'
    id: list-container-images
    entrypoint: /bin/bash
    dir: 'src/web-app'
    args: ['-c', 'docker images']

### [SCAN CONTAINER] ###
  - name: 'gcr.io/$PROJECT_ID/trivy'
    id: vulnerability-scan-image
    args: ['gcr.io/${PROJECT_ID}/web-app:${_APP_VERSION}']

### [PUBLISH APP] ###
  - name: 'gcr.io/cloud-builders/docker'
    id: publish-app-container
    entrypoint: /bin/bash
    dir: 'src/web-app'
    args: ["-c", "docker push gcr.io/${PROJECT_ID}/web-app:${_APP_VERSION}"]

substitutions:
  _APP_VERSION: "0.1.14"

availableSecrets:
  secretManager:
  - versionName: projects/791112449288/secrets/WEB_APP_DB_PASSWORD/versions/1
    env: 'WEB_APP_DB_PASSWORD'